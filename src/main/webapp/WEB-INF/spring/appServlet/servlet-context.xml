<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- post 방식으로 전송 후 뒤로가기를 눌렀을 때 입력했던 요소가 지워지지 않는 것 해결 -->
	<interceptors>
		<beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0" />
			<beans:property name="useExpiresHeader" value="true" />
			<beans:property name="useCacheControlHeader"
				value="true" />
			<beans:property name="useCacheControlNoStore"
				value="true" />
		</beans:bean>
	</interceptors>

	<!-- 파일업로드 한글처리 -->
	<annotation-driven>
		<message-converters>
			<beans:bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html; charset=UTF-8</beans:value>
						<beans:value>application/json; charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
		<beans:property name="maxUploadSize" value="5242880"></beans:property>
		<beans:property name="maxInMemorySize" value="1048576"></beans:property>
	</beans:bean>


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/vendor/**" location="/resources/vendor/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="2" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.bit.newdeal" />

	<!-- Tiles 사용 -->
	<beans:bean id="tilesviewResolver"
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<beans:bean id="titlesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/views/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

</beans:beans>
